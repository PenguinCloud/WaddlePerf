---
- name: Lets make sure we get iperf installed
  block:
    - name: Get iperf3
      ansible.builtin.get_url:
        url: "{{ iperf.url }}"
        dest: /opt/iperf3.tar.gz
    - name: Ensure iperf dir exists
      ansible.builtin.file:
        path: /opt/iperf3
        state: directory
    - name: Explode iperf3
      ansible.builtin.shell:
        cmd: tar -xvzf iperf3.tar.gz -C /opt/iperf3 --strip-components=1
        chdir: /opt/
    - name: Configure iperf3
      ansible.builtin.shell:
        cmd: ./configure
        chdir: /opt/iperf3
    - name: Install iperf3
      community.general.make:
        chdir: /opt/iperf3
        target: install
        params:
          NUM_THREADS: "{{ build.threads }}"
    - name: Remove the lesser!
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /usr/bin/iperf3
        - /usr/local/bin/iperf3
    - name: Crown our built binary!
      ansible.builtin.file:
        src: /opt/iperf3/src/iperf3
        dest: /usr/local/bin/iperf3
        mode: '0555'
        owner: root
        group: root
        state: link
  rescue:
    - name: Installing from repo as backup option
      ansible.builtin.apt:
        pkg: iperf3
- name: Create temporary scripts
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
    state: touch
  loop:
    - "/opt/{{ app.title }}/iperf3-server"
    - "/opt/{{ app.title }}/iperf3-client"
- name: Link to server scripts
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/iperf3-server"
    dest: /usr/local/bin/iperf3-server
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
    state: link
  loop:
    - /usr/local/bin/iperf3-client
- name: Link to client scripts
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/iperf3-client"
    path: /usr/local/bin/iperf3-client
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
    state: link
