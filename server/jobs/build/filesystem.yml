---
- name: Make sure app directories are built and owned by run user
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0744'
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    recurse: true
    state: directory
  loop:
    - "/opt/{{ app.title }}"
    - "/opt/geoip"
    - "/var/www/{{ app.title }}"
    - /etc/nginx/sites-enabled
    - /var/libs/nginx
    - /var/www
    - /usr/share/nginx
    - /var/www/userstats
- name: Give edit rights to startup
  ansible.builtin.file:
    path: /opt/manager/bins
    state: directory
    recurse: true
    mode: '0755'
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
- name: Create temporary scripts
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
    state: touch
  loop:
    - "/opt/{{ app.title }}/iperf3-server"
    - "/opt/{{ app.title }}/iperf3-client"
    - "/opt/{{ app.title }}/mtr-client"
- name: Link to iperf server scripts
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/iperf3-server"
    dest: /usr/local/bin/iperf3-server
    owner: root
    group: root
    mode: "0755"
    state: link
  loop:
    - /usr/local/bin/iperf3-client
- name: Link to iperf client scripts
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/iperf3-client"
    path: /usr/local/bin/iperf3-client
    owner: root
    group: root
    mode: "0755"
    state: link
- name: Link to mtr client scripts
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/mtr-client"
    path: /usr/local/bin/mtr-client
    owner: root
    group: root
    mode: "0755"
    state: link
- name: Cleanup Tasks
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /opt/iperf3.tar.gz
- name: Ensure nginx has access to temp files
  ansible.builtin.command:
    cmd: chown -R www-data:www-data /var/libs/nginx
  become: true
- name: Add a link into usr bin for iperf3-server
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/iperf3-server"
    dest: /usr/local/bin/iperf3-server
    owner: root
    group: root
    mode: "0555"
    state: link
- name: Copy the userstats.py to /var/www/userstats
  ansible.builtin.copy:
    src: web/userstats.py 
    dest: /var/www/userstats/userstats.py
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0555"
- name: Touch GeoIP.conf
  ansible.builtin.file:
    path: /usr/local/etc/GeoIP.conf
    state: touch
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
- name: Unzip GeoIP deb
  ansible.builtin.unarchive:
    src: "/opt/manager/data/GeoLite2-City_20250207.tar.gz"
    dest: /opt/geoip
    remote_src: true
- name: Copy udpping-server to local bin
  ansible.builtin.copy:
    src: "/opt/manager/bins/udpping-server.py"
    dest: /usr/local/bin/udpping-server
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0555"
- name: Touch udpping-server-wrapper
  ansible.builtin.file:
    path: "/opt/{{ app.title }}/udpping-server-wrapper"
    state: touch
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
- name: Create a link to udpping-server wrapper
  ansible.builtin.file:
    src: "/opt/{{ app.title }}/udpping-server-wrapper"
    dest: /usr/local/bin/udpping-server-wrapper
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"
    state: link
- name: Touch htpasswd file
  ansible.builtin.file:
    path: /etc/nginx/.htpasswd
    state: touch
    owner: "{{ run.user }}"
    group: "{{ run.user }}"
    mode: "0755"